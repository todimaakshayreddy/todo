{"version":3,"sources":["components/addToDo/index.js","components/toDoList/index.js","components/completed/index.js","components/toDoContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["AddToDo","addlist","list","useState","title","setTitle","className","onSubmit","e","id","preventDefault","length","done","type","placeholder","required","value","onChange","target","ToDo","props","checked","handleChange","CheckboxChange","style","textDecoration","Comp","ToDoContainer","todoList","listdo","localStorage","getItem","JSON","parse","arrangeID","obj","forEach","index","setList","todos","setTods","useEffect","setItem","stringify","handleRemove","newList","filter","newToDo","map","newToDos","handleToDo","newToDoList","remove","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22ffbc01.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction AddToDo({ addlist, list }) {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let id;\r\n\r\n        if (list.length > 0) {\r\n            id = list[list.length - 1].id + 1;\r\n        }\r\n        else {\r\n            id = 0;\r\n        }\r\n        const newToDo = {\r\n            id: id,\r\n            title: title,\r\n            done: false\r\n        };\r\n        addlist(newToDo);\r\n        setTitle(\"\")\r\n    }\r\n    return (\r\n        <div className=\"formDiv\">\r\n            <form onSubmit={handleSubmit}>\r\n               \r\n                    <input type=\"text\" placeholder=\"Enter Task\" required value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                    <button type='submit'><span>+</span></button>\r\n         \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToDo\r\n\r\n","import React from 'react'\r\n\r\nconst ToDo = (props) => {\r\n\r\n    const CheckboxChange = () =>{\r\n        if(props.e.done)\r\n        return null;\r\n        props.handleChange(props.e.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            <input type=\"checkbox\" checked={props.e.done} onChange={()=>CheckboxChange()}/>\r\n            <span style={props.e.done?{textDecoration:\"line-through\"}:null}>{props.e.title}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo\r\n","import React from 'react'\r\n\r\nfunction Comp(props) {\r\n    return (\r\n        <div className=\"list\">\r\n            <input type=\"checkbox\" checked={true} onChange={()=>null}/>\r\n            <span style={props.e.done?{textDecoration:\"line-through\"}:null}>{props.e.title}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comp\r\n","import React, { useState, useEffect } from 'react'\r\nimport AddToDo from '../addToDo'\r\nimport ToDo from '../toDoList'\r\nimport Comp from '../completed'\r\n\r\n\r\n\r\nconst ToDoContainer = () => {\r\n\r\n    let todoList;\r\n\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n        todoList = [];\r\n    }\r\n    else {\r\n        todoList = JSON.parse(localStorage.getItem(\"todos\"));\r\n    }\r\n\r\n\r\n    let listdo;\r\n\r\n    if (localStorage.getItem(\"list\") === null) {\r\n        listdo = [];\r\n    }\r\n    else {\r\n        listdo = JSON.parse(localStorage.getItem(\"list\"));\r\n    }\r\n\r\n    //use for local storage\r\n\r\n\r\n\r\n\r\n\r\n    //arranges the index - id of object array\r\n    const arrangeID = (obj) => {\r\n\r\n        obj.forEach((e, index) => {\r\n            e.id = index + 1;\r\n        })\r\n\r\n    }\r\n\r\n    const [list, setList] = useState(listdo);\r\n    const [todos, setTods] = useState(todoList);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('list', JSON.stringify(list));\r\n    }, [list]);\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n\r\n    const handleAddList = (newToDo) => {\r\n        const newToDoList = [...list, newToDo]\r\n        arrangeID(newToDoList);\r\n        setList(newToDoList);\r\n    }\r\n\r\n\r\n    const handleToDo = (newToDo) => {\r\n        const newToDos = newToDo.filter((e) => e.done === true);\r\n        const ToDo = [...todos, newToDos[0]];\r\n        arrangeID(ToDo);\r\n        setTods(ToDo);\r\n    }\r\n\r\n\r\n\r\n    const handleRemove = (id) => {\r\n\r\n        const newList = list.filter((e) =>\r\n            id !== e.id)\r\n        setList(newList);\r\n\r\n    }\r\n\r\n\r\n    const clearComp = () => {\r\n        setTods('');\r\n    }\r\n\r\n\r\n    const handleChange = (id) => {\r\n        let newToDo = list.map(list => {\r\n            if (list.id === id) {\r\n                return { ...list, done: !list.done }\r\n            }\r\n            return list;\r\n        })\r\n\r\n        handleToDo(newToDo);\r\n\r\n        newToDo = newToDo.filter((e) => {\r\n            return (e.done !== true);\r\n        })\r\n        setList(newToDo);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h4>To Do App</h4>\r\n\r\n            <AddToDo addlist={handleAddList} list={list} />\r\n\r\n            {list.length > 0 ? list.map((e) => {\r\n                return <ToDo e={e} remove={handleRemove} key={e.id} handleChange={handleChange} />\r\n            }) : <p>Add Task's</p>}\r\n\r\n\r\n                <hr className=\"hr\"/>\r\n\r\n\r\n            {todos.length > 0 ? todos.map((e) => {\r\n                return <Comp e={e} key={e.id} />\r\n            }) : <p>All Task's Done</p>}\r\n\r\n            {todos.length > 0 ? <span className=\"comp\" onClick={() => clearComp()}>Clear Completed</span> : ''}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoContainer\r\n","import './App.css';\r\nimport ToDoContainer from './components/toDoContainer';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <ToDoContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}